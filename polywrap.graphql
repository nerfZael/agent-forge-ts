#import { Module, Response, KeyValuePair, Request } into HttpServer from "http/http.wrappers.dev/u/test/http-server"
#import * into KeyValueStore from "http/http.wrappers.dev/u/test/key-value-store"
#import * into Http from "wrapscan.io/polywrap/http@1.0"

type Module {
  main(args: [String!]!): Int32!
  run(goal: String!): Step!
  runStep(input: String, state: JSON!): Step!

  onStart: Boolean!

  routeGetRoot(request: HttpServer_Request!): HttpServer_Response!
  routeGetHearbeat(request: HttpServer_Request!): HttpServer_Response!
  routePostAgentTasks(request: HttpServer_Request!): HttpServer_Response!
  routeGetAgentTasks(request: HttpServer_Request!): HttpServer_Response!
  routeGetAgentTasksById(request: HttpServer_Request!): HttpServer_Response!
  routeGetAgentTasksByIdSteps(request: HttpServer_Request!): HttpServer_Response!
  routePostAgentTasksByIdSteps(request: HttpServer_Request!): HttpServer_Response!
  routeGetAgentTasksByIdStepsById(request: HttpServer_Request!): HttpServer_Response!
  routeGetAgentTasksByIdArtifacts(request: HttpServer_Request!): HttpServer_Response!
  routePostAgentTasksByIdArtifacts(request: HttpServer_Request!): HttpServer_Response!
  routeGetAgentTasksByIdArtifactsById(request: HttpServer_Request!): HttpServer_Response!
}

type Step {
  state: JSON!
  output: String
}